-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer

-- Notifier
local function notify(msg)
    StarterGui:SetCore("SendNotification", {Title="Script Notifier", Text=msg, Duration=2})
end

-- Remotes
local remotes = ReplicatedStorage:WaitForChild("remotes")
local onHit = remotes:WaitForChild("onHit")
local abilityHit = remotes:WaitForChild("abilityHit")
local swing = remotes:WaitForChild("swing")
local useBuff = remotes:WaitForChild("useAbility")
local parryRemote = remotes:WaitForChild("parry")

-- Buff contoh
useBuff:FireServer("LifeSteal1")

-- Global Vars
_G.active = false
_G.godMode = true
_G.instakill = false
_G.vacuumActive = false
_G.autoParry = false
_G.speedBoost = false
_G.proteksi = true

local damagePerHit = 2
local boostedWalkSpeed = 50
local originalWalkSpeed = 16
local speedJumpPower = 75
local originalJumpPower = 50
local maxHealthValue = math.huge
local vacuumRadius = 100
local vacuumMinDistance = 5
local vacuumSpeed = 0.2
local behindDistance = -5
local heightOffset = 0
local maxDistance = 100
local lerpSpeed = 0.1
local excludedEnemies = {["Blender"]=true,["Dummy"]=true}

-- Functions
local function applySpeedBoost()
    local char = player.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            if _G.speedBoost then
                hum.WalkSpeed = boostedWalkSpeed
                hum.JumpPower = speedJumpPower
            else
                hum.WalkSpeed = originalWalkSpeed
                hum.JumpPower = originalJumpPower
            end
        end
    end
end

local function enableGodMode()
    local char = player.Character or player.CharacterAdded:Wait()
    local hum = char:WaitForChild("Humanoid")
    hum.MaxHealth = maxHealthValue
    hum.Health = maxHealthValue
    hum.HealthChanged:Connect(function()
        if _G.godMode and hum.Health < hum.MaxHealth then
            hum.Health = hum.MaxHealth
        end
    end)
end

local function enableAntiKnockback()
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.ChildAdded:Connect(function(child)
        if _G.proteksi and (child:IsA("BodyVelocity") or child:IsA("VectorForce") or child:IsA("LinearVelocity")) then
            child:Destroy()
        end
    end)
end

local function enableAntiStun()
    local char = player.Character or player.CharacterAdded:Wait()
    local hum = char:WaitForChild("Humanoid")
    hum:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if _G.proteksi and hum.WalkSpeed == 0 then
            hum.WalkSpeed = originalWalkSpeed
        end
    end)
    hum:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if _G.proteksi and hum.JumpPower == 0 then
            hum.JumpPower = originalJumpPower
        end
    end)
    char.DescendantAdded:Connect(function(obj)
        if _G.proteksi and obj.Name:lower():find("stun") then
            obj:Destroy()
        end
    end)
end

local function getCharacterHRP()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

local function getNearestEnemy()
    local charHRP = getCharacterHRP()
    local nearest, nearestDist
    for _, obj in pairs(Workspace:GetChildren()) do
        local hum = obj:FindFirstChildOfClass("Humanoid")
        local hrp = obj:FindFirstChild("HumanoidRootPart")
        if hum and hrp and hum.Health>0 and obj~=player.Character and not excludedEnemies[obj.Name] then
            local dist = (hrp.Position - charHRP.Position).Magnitude
            if not nearest or dist < nearestDist then
                nearest, nearestDist = hrp, dist
            end
        end
    end
    return nearest
end

local function attackTarget(humanoid)
    if humanoid and humanoid.Health>0 then
        local damage = _G.instakill and math.huge or damagePerHit
        swing:FireServer()
        task.wait(0.05)
        onHit:FireServer(humanoid, damage)
        abilityHit:FireServer(humanoid, damage,{["burn"]={["dur"]=1}})
    end
end

local function killAll()
    for _,v in pairs(Workspace:GetChildren()) do
        local hum = v:FindFirstChildOfClass("Humanoid")
        local hrp = v:FindFirstChild("HumanoidRootPart")
        if hum and hrp and hum.Health>0 and v~=player.Character and not excludedEnemies[v.Name] then
            attackTarget(hum)
        end
    end
end

-- RenderStepped Loops
RunService.RenderStepped:Connect(function()
    local charHRP = getCharacterHRP()
    -- Auto Nempel
    if _G.active then
        local enemyHRP = getNearestEnemy()
        if enemyHRP then
            local targetPos = enemyHRP.Position + (enemyHRP.CFrame.LookVector*behindDistance) + Vector3.new(0,heightOffset,0)
            charHRP.CFrame = CFrame.new(charHRP.Position:Lerp(targetPos, lerpSpeed), enemyHRP.Position)
        end
    end
    -- Vacuum
    if _G.vacuumActive then
        for _,obj in pairs(Workspace:GetChildren()) do
            local hum = obj:FindFirstChildOfClass("Humanoid")
            local hrp = obj:FindFirstChild("HumanoidRootPart")
            if hum and hrp and hum.Health>0 and obj~=player.Character and not excludedEnemies[obj.Name] then
                local dist = (hrp.Position - charHRP.Position).Magnitude
                if dist<=vacuumRadius and dist>vacuumMinDistance then
                    local newPos = hrp.Position:Lerp(charHRP.Position, vacuumSpeed)
                    hrp.CFrame = CFrame.new(newPos.X,charHRP.Position.Y,newPos.Z)
                    hum.AutoRotate = false
                end
            end
        end
    end
    -- Auto Parry
    if _G.autoParry then pcall(function() parryRemote:FireServer() end) end
end)

-- Character Setup
local function setupCharacter()
    local char = player.Character or player.CharacterAdded:Wait()
    applySpeedBoost()
    if _G.godMode then enableGodMode() end
    enableAntiKnockback()
    enableAntiStun()
end
player.CharacterAdded:Connect(setupCharacter)
if player.Character then setupCharacter() end

-- UI (Draggable + Hide/Show)
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size=UDim2.new(0,80,0,30)
toggleBtn.Position=UDim2.new(0,10,0,10)
toggleBtn.Text="âš™ Menu"
toggleBtn.BackgroundColor3=Color3.fromRGB(50,50,50)
toggleBtn.TextColor3=Color3.fromRGB(255,255,255)
toggleBtn.Font=Enum.Font.SourceSansBold
toggleBtn.TextSize=18
toggleBtn.Parent=ScreenGui
toggleBtn.Active=true
toggleBtn.Draggable=true

local menuFrame = Instance.new("Frame", ScreenGui)
menuFrame.Size=UDim2.new(0,200,0,350)
menuFrame.Position=UDim2.new(0,100,0.5,-175)
menuFrame.BackgroundColor3=Color3.fromRGB(30,30,30)
menuFrame.Active=true
menuFrame.Draggable=true
menuFrame.Visible=false

local UIListLayout=Instance.new("UIListLayout", menuFrame)
UIListLayout.Padding=UDim.new(0,5)
UIListLayout.FillDirection=Enum.FillDirection.Vertical
UIListLayout.HorizontalAlignment=Enum.HorizontalAlignment.Center

-- Toggle Menu
toggleBtn.MouseButton1Click:Connect(function()
    menuFrame.Visible = not menuFrame.Visible
end)

-- Fungsi buat Toggle Buttons
local function makeToggle(text,onVar)
    local btn=Instance.new("TextButton")
    btn.Size=UDim2.new(0.9,0,0,30)
    btn.Text=text
    btn.Font=Enum.Font.SourceSans
    btn.TextSize=18
    btn.BackgroundColor3=Color3.fromRGB(60,60,60)
    btn.TextColor3=Color3.fromRGB(255,255,255)
    btn.Parent=menuFrame
    local state = _G[onVar]
    btn.MouseButton1Click:Connect(function()
        state = not state
        _G[onVar] = state
        btn.BackgroundColor3 = state and Color3.fromRGB(40,180,90) or Color3.fromRGB(60,60,60)
    end)
    return btn
end

-- Toggle semua fitur
makeToggle("ðŸŽ¯ Auto Nempel","active")
makeToggle("ðŸ’Ž GodMode","godMode")
makeToggle("â˜  Instakill","instakill")
makeToggle("ðŸŒ€ Vacuum","vacuumActive")
makeToggle("âš¡ Auto Parry","autoParry")
makeToggle("ðŸš€ SpeedBoost","speedBoost")
makeToggle("ðŸ›¡ Proteksi","proteksi")

-- KillAll Button
local killBtn=Instance.new("TextButton")
killBtn.Size=UDim2.new(0.9,0,0,30)
killBtn.Text="â˜  KillAll"
killBtn.Font=Enum.Font.SourceSans
killBtn.TextSize=18
killBtn.BackgroundColor3=Color3.fromRGB(100,100,150)
killBtn.TextColor3=Color3.fromRGB(255,255,255)
killBtn.Parent=menuFrame
killBtn.MouseButton1Click:Connect(killAll)

-- SpeedBoost Slider
local function makeSlider(name,text,minVal,maxVal,initVal)
    local frame=Instance.new("Frame",menuFrame)
    frame.Size=UDim2.new(0.9,0,0,40)
    frame.BackgroundColor3=Color3.fromRGB(50,50,50)
    local label=Instance.new("TextLabel",frame)
    label.Size=UDim2.new(1,0,0,20)
    label.Position=UDim2.new(0,5,0,0)
    label.BackgroundTransparency=1
    label.TextColor3=Color3.fromRGB(255,255,255)
    label.Font=Enum.Font.SourceSans
    label.TextSize=16
    label.TextXAlignment=Enum.TextXAlignment.Left
    label.Text=text.." : "..initVal
    local barBg=Instance.new("Frame",frame)
    barBg.Size=UDim2.new(1,-10,0,8)
    barBg.Position=UDim2.new(0,5,0,28)
    barBg.BackgroundColor3=Color3.fromRGB(100,100,100)
    local barFill=Instance.new("Frame",barBg)
    barFill.Size=UDim2.new((initVal-minVal)/(maxVal-minVal),0,1,0)
    barFill.BackgroundColor3=Color3.fromRGB(40,180,90)
    local dragging=false
    barBg.InputBegan:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
            dragging=true
        end
    end)
    barBg.InputEnded:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
            dragging=false
        end
    end)
    UIS.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch) then
            local relativeX = math.clamp(input.Position.X - barBg.AbsolutePosition.X,0,barBg.AbsoluteSize.X)
            local ratio = relativeX/barBg.AbsoluteSize.X
            local value = math.floor(minVal + ratio*(maxVal-minVal))
            barFill.Size=UDim2.new(ratio,0,1,0)
            label.Text=text.." : "..value
            boostedWalkSpeed=value
            if _G.speedBoost then applySpeedBoost() end
        end
    end)
end

makeSlider("SpeedSlider","SpeedBoost",20,100,boostedWalkSpeed)

notify("âœ… Script siap! Drag menu sesuka hati.")
